version: "3"

services:
  sut:
    build:
      context: .
      args:
        - ENV=test
    image: pixetl_test
    container_name: pixetl_test
    volumes:
      - ./gfw_pixetl:/usr/local/app/gfw_pixetl:ro
      - ./tests:/usr/local/app/tests
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./tests/fixtures/tmp:/tmp
    environment:
      - ENV=test
      - PGPASSWORD=postgres  # pragma: allowlist secret
      - PGHOST=pixetl_test_database
      - PGUSER=gfw
      - PGDATABASE=_test
      - PGPORT=5432
      - AWS_ACCESS_KEY_ID=testing  # pragma: allowlist secret
      - AWS_SECRET_ACCESS_KEY=testing  # pragma: allowlist secret
      - AWS_SECURITY_TOKEN=testing  # pragma: allowlist secret
      - AWS_SESSION_TOKEN=testing  # pragma: allowlist secret
      - AWS_ENDPOINT_URL=http://motoserver-s3:5000
#      - AWS_SECRETSMANAGER_URL=http://motoserver-secretsmanager:5001
      - AWS_HTTPS=NO
      - AWS_VIRTUAL_HOSTING=FALSE
      - GDAL_DISABLE_READDIR_ON_OPEN=YES
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.gcs/private_key.json
#      - AWS_GCS_KEY_SECRET_ARN=gcs/gfw-gee-export
    working_dir: /tmp
    entrypoint: /usr/local/app/tests/run_tests.sh
    depends_on:
      - pixetl_test_database
      - motoserver-s3
#      - motoserver-secretsmanager

  pixetl_test_database:
    container_name: pixetl-test-database-container
    image: postgis/postgis:12-2.5-alpine
    ports:
      - "54323:5432"
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_DB=_test
      - POSTGRES_USER=gfw
      - POSTGRES_PASSWORD=postgres  # pragma: allowlist secret
    volumes:
      - test_database_data:/var/lib/postgresql/data
    restart: on-failure

  motoserver-s3:
    container_name: motoserver-s3
    image: motoserver/moto:latest
    ports:
      - "${MOTO_PORT-5000}:5000"
    entrypoint: moto_server s3 -p 5000 -H 0.0.0.0
    restart: on-failure
#
#  motoserver-secretsmanager:
#    container_name: motoserver-secretsmanager
#    image: motoserver/moto:latest
#    ports:
#      - 5001:5001
#    entrypoint: moto_server secretsmanager -p 5001 -H 0.0.0.0
#    restart: on-failure

volumes:
  test_database_data:
