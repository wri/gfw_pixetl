version: "3"

services:
  sut:
    build:
      context: .
      args:
        - ENV=test
    image: pixetl_test
    container_name: pixetl_test
    volumes:
      - ./gfw_pixetl:/usr/local/app/gfw_pixetl:ro
      - ./tests:/usr/local/app/tests
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./tests/fixtures/tmp:/tmp
    environment:
      - ENV=test
      - PGPASSWORD=postgres  # pragma: allowlist secret
      - PGHOST=test_database
      - PGUSER=gfw
      - PGDATABASE=_test
      - AWS_ACCESS_KEY_ID=testing  # pragma: allowlist secret
      - AWS_SECRET_ACCESS_KEY=testing  # pragma: allowlist secret
      - AWS_SECURITY_TOKEN=testing  # pragma: allowlist secret
      - AWS_SESSION_TOKEN=testing  # pragma: allowlist secret
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_HTTPS=NO
      - AWS_VIRTUAL_HOSTING=FALSE
      - GDAL_DISABLE_READDIR_ON_OPEN=YES
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.gcs/private_key.json
      - AWS_GCS_KEY_SECRET_ARN=gcs/gfw-gee-export
      - CPL_DEBUG=1
      - CPL_CURL_VERBOSE=ON
    working_dir: /tmp
    entrypoint: /usr/local/app/tests/run_tests.sh
    depends_on:
      - test_database
      - localstack

  test_database:
    container_name: pixetl-test-database
    image: postgis/postgis:11-3.0-alpine
    ports:
      - 54323:5432
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_DB=_test
      - POSTGRES_USER=gfw
      - POSTGRES_PASSWORD=postgres  # pragma: allowlist secret
    volumes:
      - test_database_data:/var/lib/postgresql/data
    restart: on-failure

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
#      - '53:53'
      - '443:443'
      - '4563-4584:4563-4584'
      - '8055:8080'
      - '${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}'
    environment:
      - SERVICES=s3,secretsmanager,iam
      - DEBUG=1
      - DISABLE_EVENTS=1
      - LAMBDA_DOCKER_NETWORK=gfw-pixetl_test_default
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY}
#      - DNS_ADDRESS=22.22.22.22
      - LAMBDA_REMOTE_DOCKER=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOSTNAME_EXTERNAL=localstack
      - HOSTNAME=localstack
    volumes:
      - "${TMPDIR:-./localstack}:/tmp/localstack"
      - '/var/run/docker.sock:/var/run/docker.sock'

volumes:
  test_database_data:
