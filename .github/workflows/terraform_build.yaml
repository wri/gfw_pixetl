name: Run tests and apply terraform changes for current branch

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        ./scripts/setup
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build container
      run: |
        ./scripts/cibuild ${{github.ref}}
    - name: Install CodeClimate Coverage Reporter
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
    - name: Test with pytest
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.test_report_id }}
      run: |
        ./cc-test-reporter before-build
        ./scripts/test -b ${{github.ref}} -k ${{ secrets.aws_key_dev }} -s ${{ secrets.aws_secret_dev }}
        ./cc-test-reporter after-build -t coverage.py -p ${PWD} --exit-code $?
    - name: Deploy production
      if: success() && contains(github.ref, 'master')
      env:
        ENV: production
        AWS_ACCESS_KEY_ID: ${{ secrets.aws_key_production }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_production }}
        AWS_DEFAULT_REGION: ${{ secrets.aws_region_production }}
      run: |
        ./scripts/infra plan ${{ github.ref }}
        ./scripts/infra apply
    - name: Deploy staging
      if: success() && contains(github.ref, 'develop')
      env:
        ENV: staging
        AWS_ACCESS_KEY_ID: ${{ secrets.aws_key_staging }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_staging }}
        AWS_DEFAULT_REGION: ${{ secrets.aws_region_staging }}
      run: |
        ./scripts/infra plan ${{ github.ref }}
        ./scripts/infra apply
    - name: Deploy dev
      if: success() && (! contains(github.ref, 'develop')) && (! contains(github.ref, 'master'))
      env:
        ENV: dev
        AWS_ACCESS_KEY_ID: ${{ secrets.aws_key_dev }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_dev }}
        AWS_DEFAULT_REGION: ${{ secrets.aws_region_dev }}
      run: |
        ./scripts/infra plan ${{ github.ref }}
        ./scripts/infra apply